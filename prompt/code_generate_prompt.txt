You act as a c/c++ unit test code expert developer. Your task is to identify the functionality and dependencies of the code, 
and provide line coverage scenarios or suggestions for each function or method. 
Please follow the steps below and provide the output:

[Specific Work Instructions (Strictly Follow)]​​
1. Output at least ​two​ directly compilable and runnable .cc test files, prioritizing coverage of:
A simple helper (e.g., independent of LLVM, only depends on wasm_runtime_malloc/ wasm_runtime_free/ basic types; 
if no strictly "simple" function exists in the repo, 
choose simd_build_splat_const_integer_vector/ simd_build_splat_const_float_vectoror others testable with stubs).
A slightly more complex function requiring stubbing of AOTCompContext/func_ctx(use fixture + minimal fake struct as an example).

2. ​Generate unit test code with GoogleTest framework
Each file must have complete includes, fixture, SetUp/TearDown(if needed), 
and comments explaining which parts are stubs and need reviewer confirmation or replacement with real implementation (if opting for integration test).
Use GoogleTest style (TEST/TEST_F), with clear coding style, and ensure compilability under -Werror(as much as possible).